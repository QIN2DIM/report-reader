# 将 report-reader 替换为真实域名
# ----------------------------------------------------------------------
# 1. HTTP to HTTPS Redirection
#    将所有 http://report-reader 的请求强制跳转到 https
# ----------------------------------------------------------------------
server {
    listen 80;
    listen [::]:80;
    server_name report-reader;

    # Let's Encrypt 续期验证需要
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# ----------------------------------------------------------------------
# 2. HTTPS Server Block (Reverse Proxy)
#    处理所有 https://report-reader 的请求
# ----------------------------------------------------------------------
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name report-reader;

    # --- SSL 证书配置 ---
    # 请将这里的路径替换为 Certbot 生成的实际路径
    # 通常在 /etc/letsencrypt/live/your_domain/
    ssl_certificate /etc/letsencrypt/live/report-reader/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/report-reader/privkey.pem;
    
    # 推荐的 SSL 安全配置
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    # --- 反向代理配置 ---
    # 修改为实际运行的端口（默认：31313）
    location / {
        # 核心指令：将请求转发到 http://localhost:31313
        proxy_pass http://localhost:31313;

        # --- 重要的代理头部设置 ---
        # 将客户端的真实 Host 头部传递给后端
        proxy_set_header Host $host;
        # 将客户端的真实 IP 地址传递给后端
        proxy_set_header X-Real-IP $remote_addr;
        # 传递完整的 IP 链路（经过多层代理时有用）
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # 告诉后端，原始请求是 HTTPS
        proxy_set_header X-Forwarded-Proto $scheme;

        # --- （必选）WebSocket 支持 ---
        # Streamlit 基于 WebSocket 进行组件间通信，不开 wss 组件无法渲染
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}